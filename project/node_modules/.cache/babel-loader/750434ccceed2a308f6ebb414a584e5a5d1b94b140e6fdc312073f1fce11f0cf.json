{"ast":null,"code":"import axios from 'axios';\nimport { getToken } from './token';\nimport { processErrorHandle } from './process-error-handle';\nimport { StatusCodes } from 'http-status-codes';\nconst StatusCodeMapping = {\n  [StatusCodes.BAD_REQUEST]: true,\n  [StatusCodes.UNAUTHORIZED]: true,\n  [StatusCodes.NOT_FOUND]: true\n};\nconst shouldDisplayError = response => !!StatusCodeMapping[response.status];\nconst BACKEND_URL = 'https://grading.design.pages.academy';\nconst REQUEST_TIMEOUT = 5000;\nexport const createAPI = () => {\n  const api = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT\n  });\n  api.interceptors.request.use(config => {\n    const token = getToken();\n    if (token && config.headers) {\n      config.headers['x-token'] = token;\n    }\n    return config;\n  });\n  api.interceptors.response.use(response => response, error => {\n    if (error.response && shouldDisplayError(error.response)) {\n      processErrorHandle(error.response.data.error);\n    }\n    throw error;\n  });\n  return api;\n};","map":{"version":3,"names":["axios","getToken","processErrorHandle","StatusCodes","StatusCodeMapping","BAD_REQUEST","UNAUTHORIZED","NOT_FOUND","shouldDisplayError","response","status","BACKEND_URL","REQUEST_TIMEOUT","createAPI","api","create","baseURL","timeout","interceptors","request","use","config","token","headers","error","data"],"sources":["/Users/daria/Desktop/ escape/project/src/services/api.ts"],"sourcesContent":["import axios, {AxiosError, AxiosInstance, AxiosRequestConfig, AxiosResponse} from 'axios';\nimport {getToken} from './token';\nimport {processErrorHandle} from './process-error-handle';\nimport {StatusCodes} from 'http-status-codes';\n\nconst StatusCodeMapping: Record<number, boolean> = {\n  [StatusCodes.BAD_REQUEST]: true,\n  [StatusCodes.UNAUTHORIZED]: true,\n  [StatusCodes.NOT_FOUND]: true\n};\n\nconst shouldDisplayError = (response: AxiosResponse) => !!StatusCodeMapping[response.status];\n\nconst BACKEND_URL = 'https://grading.design.pages.academy';\nconst REQUEST_TIMEOUT = 5000;\n\nexport const createAPI = (): AxiosInstance => {\n  const api = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT,\n  });\n\n  api.interceptors.request.use(\n    (config: AxiosRequestConfig) => {\n      const token = getToken();\n\n      if (token && config.headers) {\n        config.headers['x-token'] = token;\n      }\n\n      return config;\n    },\n  );\n\n  api.interceptors.response.use(\n    (response) => response,\n    (error: AxiosError<{error: string}>) => {\n      if (error.response && shouldDisplayError(error.response)) {\n        processErrorHandle(error.response.data.error);\n      }\n\n      throw error;\n    }\n  );\n\n  return api;\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAsE,OAAO;AACzF,SAAQC,QAAQ,QAAO,SAAS;AAChC,SAAQC,kBAAkB,QAAO,wBAAwB;AACzD,SAAQC,WAAW,QAAO,mBAAmB;AAE7C,MAAMC,iBAA0C,GAAG;EACjD,CAACD,WAAW,CAACE,WAAW,GAAG,IAAI;EAC/B,CAACF,WAAW,CAACG,YAAY,GAAG,IAAI;EAChC,CAACH,WAAW,CAACI,SAAS,GAAG;AAC3B,CAAC;AAED,MAAMC,kBAAkB,GAAIC,QAAuB,IAAK,CAAC,CAACL,iBAAiB,CAACK,QAAQ,CAACC,MAAM,CAAC;AAE5F,MAAMC,WAAW,GAAG,sCAAsC;AAC1D,MAAMC,eAAe,GAAG,IAAI;AAE5B,OAAO,MAAMC,SAAS,GAAG,MAAqB;EAC5C,MAAMC,GAAG,GAAGd,KAAK,CAACe,MAAM,CAAC;IACvBC,OAAO,EAAEL,WAAW;IACpBM,OAAO,EAAEL;EACX,CAAC,CAAC;EAEFE,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAA0B,IAAK;IAC9B,MAAMC,KAAK,GAAGrB,QAAQ,EAAE;IAExB,IAAIqB,KAAK,IAAID,MAAM,CAACE,OAAO,EAAE;MAC3BF,MAAM,CAACE,OAAO,CAAC,SAAS,CAAC,GAAGD,KAAK;IACnC;IAEA,OAAOD,MAAM;EACf,CAAC,CACF;EAEDP,GAAG,CAACI,YAAY,CAACT,QAAQ,CAACW,GAAG,CAC1BX,QAAQ,IAAKA,QAAQ,EACrBe,KAAkC,IAAK;IACtC,IAAIA,KAAK,CAACf,QAAQ,IAAID,kBAAkB,CAACgB,KAAK,CAACf,QAAQ,CAAC,EAAE;MACxDP,kBAAkB,CAACsB,KAAK,CAACf,QAAQ,CAACgB,IAAI,CAACD,KAAK,CAAC;IAC/C;IAEA,MAAMA,KAAK;EACb,CAAC,CACF;EAED,OAAOV,GAAG;AACZ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}