{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { changeFilterLevel, changeFilterType, changeLevel, changeType, getCurrentQuest, getCurrentQuestBooking, loadLocation, loadMyBooking, loadQuests, reviewsLoading } from './quest-action';\nconst initialState = {\n  all: 'Все квесты',\n  any: 'Любой',\n  quests: [],\n  quest: null,\n  myBooking: [],\n  booking: null,\n  location: [],\n  filterType: 'Все квесты',\n  filterLevel: 'Любой',\n  reviewsLoading: false\n};\nexport const questReducer = createReducer(initialState, builder => {\n  builder.addCase(changeLevel, (state, action) => {\n    const {\n      any\n    } = action.payload;\n    state.any = any;\n  }).addCase(changeType, (state, action) => {\n    const {\n      all\n    } = action.payload;\n    state.all = all;\n  }).addCase(changeFilterType, (state, action) => {\n    state.filterType = action.payload;\n  }).addCase(changeFilterLevel, (state, action) => {\n    state.filterLevel = action.payload;\n  }).addCase(loadQuests, (state, action) => {\n    state.quests = action.payload;\n  }).addCase(loadLocation, (state, action) => {\n    state.location = action.payload;\n  }).addCase(getCurrentQuest, (state, action) => {\n    state.quest = action.payload;\n  }).addCase(getCurrentQuestBooking, (state, action) => {\n    state.booking = action.payload;\n  }).addCase(reviewsLoading, (state, action) => {\n    state.reviewsLoading = action.payload;\n  }).addCase(loadMyBooking, (state, action) => {\n    state.myBooking = action.payload;\n  });\n});","map":{"version":3,"names":["createReducer","changeFilterLevel","changeFilterType","changeLevel","changeType","getCurrentQuest","getCurrentQuestBooking","loadLocation","loadMyBooking","loadQuests","reviewsLoading","initialState","all","any","quests","quest","myBooking","booking","location","filterType","filterLevel","questReducer","builder","addCase","state","action","payload"],"sources":["/Users/daria/Desktop/ escape/project/src/store/quest/quest-reduser.ts"],"sourcesContent":["import {createReducer} from '@reduxjs/toolkit';\nimport {\n  changeFilterLevel,\n  changeFilterType, changeLevel, changeType,\n  getCurrentQuest,\n  getCurrentQuestBooking,\n  loadLocation, loadMyBooking,\n  loadQuests, reviewsLoading\n} from './quest-action';\nimport { BookingType, BookingTypes, QuestsType, QuestType} from '../../types/booking-type';\n\ntype InitialState = {\n  all: string;\n  any: string;\n  quests: QuestsType;\n  quest: QuestType | null;\n  myBooking: BookingType[];\n  booking: BookingType | null;\n  location: BookingTypes;\n  filterType: string;\n  filterLevel: string;\n  reviewsLoading: boolean;\n}\n\nconst initialState: InitialState = {\n  all: 'Все квесты',\n  any: 'Любой',\n  quests: [],\n  quest: null,\n  myBooking: [],\n  booking: null,\n  location: [],\n  filterType: 'Все квесты',\n  filterLevel: 'Любой',\n  reviewsLoading: false\n\n};\n\nexport const questReducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(changeLevel, (state, action) => {\n      const { any } = action.payload;\n      state.any = any;\n    })\n    .addCase(changeType, (state, action) => {\n      const { all } = action.payload;\n      state.all = all;\n    })\n    .addCase(changeFilterType, (state, action) => {\n      state.filterType = action.payload;\n    })\n    .addCase(changeFilterLevel, (state, action) => {\n      state.filterLevel = action.payload;\n    })\n    .addCase(loadQuests, (state, action) => {\n      state.quests = action.payload;\n    })\n    .addCase(loadLocation, (state, action) => {\n      state.location = action.payload;\n    })\n    .addCase(getCurrentQuest, (state, action) => {\n      state.quest = action.payload;\n    })\n    .addCase(getCurrentQuestBooking, (state, action) => {\n      state.booking = action.payload;\n    })\n    .addCase(reviewsLoading, (state, action) => {\n      state.reviewsLoading = action.payload;\n    })\n    .addCase(loadMyBooking, (state, action) => {\n      state.myBooking = action.payload;\n    });\n});\n"],"mappings":"AAAA,SAAQA,aAAa,QAAO,kBAAkB;AAC9C,SACEC,iBAAiB,EACjBC,gBAAgB,EAAEC,WAAW,EAAEC,UAAU,EACzCC,eAAe,EACfC,sBAAsB,EACtBC,YAAY,EAAEC,aAAa,EAC3BC,UAAU,EAAEC,cAAc,QACrB,gBAAgB;AAgBvB,MAAMC,YAA0B,GAAG;EACjCC,GAAG,EAAE,YAAY;EACjBC,GAAG,EAAE,OAAO;EACZC,MAAM,EAAE,EAAE;EACVC,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE,EAAE;EACbC,OAAO,EAAE,IAAI;EACbC,QAAQ,EAAE,EAAE;EACZC,UAAU,EAAE,YAAY;EACxBC,WAAW,EAAE,OAAO;EACpBV,cAAc,EAAE;AAElB,CAAC;AAED,OAAO,MAAMW,YAAY,GAAGrB,aAAa,CAACW,YAAY,EAAGW,OAAO,IAAK;EACnEA,OAAO,CACJC,OAAO,CAACpB,WAAW,EAAE,CAACqB,KAAK,EAAEC,MAAM,KAAK;IACvC,MAAM;MAAEZ;IAAI,CAAC,GAAGY,MAAM,CAACC,OAAO;IAC9BF,KAAK,CAACX,GAAG,GAAGA,GAAG;EACjB,CAAC,CAAC,CACDU,OAAO,CAACnB,UAAU,EAAE,CAACoB,KAAK,EAAEC,MAAM,KAAK;IACtC,MAAM;MAAEb;IAAI,CAAC,GAAGa,MAAM,CAACC,OAAO;IAC9BF,KAAK,CAACZ,GAAG,GAAGA,GAAG;EACjB,CAAC,CAAC,CACDW,OAAO,CAACrB,gBAAgB,EAAE,CAACsB,KAAK,EAAEC,MAAM,KAAK;IAC5CD,KAAK,CAACL,UAAU,GAAGM,MAAM,CAACC,OAAO;EACnC,CAAC,CAAC,CACDH,OAAO,CAACtB,iBAAiB,EAAE,CAACuB,KAAK,EAAEC,MAAM,KAAK;IAC7CD,KAAK,CAACJ,WAAW,GAAGK,MAAM,CAACC,OAAO;EACpC,CAAC,CAAC,CACDH,OAAO,CAACd,UAAU,EAAE,CAACe,KAAK,EAAEC,MAAM,KAAK;IACtCD,KAAK,CAACV,MAAM,GAAGW,MAAM,CAACC,OAAO;EAC/B,CAAC,CAAC,CACDH,OAAO,CAAChB,YAAY,EAAE,CAACiB,KAAK,EAAEC,MAAM,KAAK;IACxCD,KAAK,CAACN,QAAQ,GAAGO,MAAM,CAACC,OAAO;EACjC,CAAC,CAAC,CACDH,OAAO,CAAClB,eAAe,EAAE,CAACmB,KAAK,EAAEC,MAAM,KAAK;IAC3CD,KAAK,CAACT,KAAK,GAAGU,MAAM,CAACC,OAAO;EAC9B,CAAC,CAAC,CACDH,OAAO,CAACjB,sBAAsB,EAAE,CAACkB,KAAK,EAAEC,MAAM,KAAK;IAClDD,KAAK,CAACP,OAAO,GAAGQ,MAAM,CAACC,OAAO;EAChC,CAAC,CAAC,CACDH,OAAO,CAACb,cAAc,EAAE,CAACc,KAAK,EAAEC,MAAM,KAAK;IAC1CD,KAAK,CAACd,cAAc,GAAGe,MAAM,CAACC,OAAO;EACvC,CAAC,CAAC,CACDH,OAAO,CAACf,aAAa,EAAE,CAACgB,KAAK,EAAEC,MAAM,KAAK;IACzCD,KAAK,CAACR,SAAS,GAAGS,MAAM,CAACC,OAAO;EAClC,CAAC,CAAC;AACN,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}