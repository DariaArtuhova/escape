{"ast":null,"code":"var _jsxFileName = \"/Users/daria/Desktop/ escape/project/src/components/filter-level/filter-level.tsx\",\n  _s = $RefreshSig$();\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport { LEVELS } from '../../const';\nimport { changeFilterLevel, changeLevel } from '../../store/quest/quest-action';\nimport { getActiveLevel } from '../../store/quest/quest-selector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FilterLevel() {\n  _s();\n  const activeLevel = useAppSelector(getActiveLevel);\n  const dispatch = useAppDispatch();\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    className: \"filter__section\",\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      className: \"visually-hidden\",\n      children: \"\\u0421\\u043B\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"filter__list\",\n      children: LEVELS.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"filter__item\",\n        onClick: () => {\n          dispatch(changeFilterLevel(item.type));\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"level\",\n          id: item.name,\n          checked: activeLevel === item.name,\n          onChange: evt => {\n            dispatch(changeLevel({\n              any: item.name\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"filter__label\",\n          htmlFor: item.name,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"filter__label-text\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 66\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, item.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(FilterLevel, \"5rDBmcOyrFHbZ6/wRteONSjiOh4=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\n_c = FilterLevel;\nvar _c;\n$RefreshReg$(_c, \"FilterLevel\");","map":{"version":3,"names":["useAppDispatch","useAppSelector","LEVELS","changeFilterLevel","changeLevel","getActiveLevel","FilterLevel","activeLevel","dispatch","map","item","type","name","evt","any"],"sources":["/Users/daria/Desktop/ escape/project/src/components/filter-level/filter-level.tsx"],"sourcesContent":["import {useAppDispatch, useAppSelector} from '../../store';\nimport {LEVELS} from '../../const';\nimport {changeFilterLevel, changeLevel} from '../../store/quest/quest-action';\nimport {getActiveLevel} from '../../store/quest/quest-selector';\n\nexport function FilterLevel() : JSX.Element {\n  const activeLevel = useAppSelector(getActiveLevel);\n  const dispatch = useAppDispatch();\n\n  return (\n    <fieldset className=\"filter__section\">\n      <legend className=\"visually-hidden\">Сложность</legend>\n      <ul className=\"filter__list\">\n        {LEVELS.map((item) => (\n          <li className=\"filter__item\"\n            key={item.name}\n            onClick={() => {\n              dispatch(changeFilterLevel(item.type));\n            }}\n          >\n            <input type=\"radio\" name=\"level\" id={item.name} checked={activeLevel === item.name}\n              onChange={(evt) => {\n                dispatch(changeLevel({ any: item.name }));\n              }}\n            />\n            <label className=\"filter__label\" htmlFor={item.name}><span className=\"filter__label-text\">{item.name}</span>\n            </label>\n          </li>\n        ))}\n      </ul>\n    </fieldset>\n  );\n}\n"],"mappings":";;AAAA,SAAQA,cAAc,EAAEC,cAAc,QAAO,aAAa;AAC1D,SAAQC,MAAM,QAAO,aAAa;AAClC,SAAQC,iBAAiB,EAAEC,WAAW,QAAO,gCAAgC;AAC7E,SAAQC,cAAc,QAAO,kCAAkC;AAAC;AAEhE,OAAO,SAASC,WAAW,GAAiB;EAAA;EAC1C,MAAMC,WAAW,GAAGN,cAAc,CAACI,cAAc,CAAC;EAClD,MAAMG,QAAQ,GAAGR,cAAc,EAAE;EAEjC,oBACE;IAAU,SAAS,EAAC,iBAAiB;IAAA,wBACnC;MAAQ,SAAS,EAAC,iBAAiB;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAS,eACtD;MAAI,SAAS,EAAC,cAAc;MAAA,UACzBE,MAAM,CAACO,GAAG,CAAEC,IAAI,iBACf;QAAI,SAAS,EAAC,cAAc;QAE1B,OAAO,EAAE,MAAM;UACbF,QAAQ,CAACL,iBAAiB,CAACO,IAAI,CAACC,IAAI,CAAC,CAAC;QACxC,CAAE;QAAA,wBAEF;UAAO,IAAI,EAAC,OAAO;UAAC,IAAI,EAAC,OAAO;UAAC,EAAE,EAAED,IAAI,CAACE,IAAK;UAAC,OAAO,EAAEL,WAAW,KAAKG,IAAI,CAACE,IAAK;UACjF,QAAQ,EAAGC,GAAG,IAAK;YACjBL,QAAQ,CAACJ,WAAW,CAAC;cAAEU,GAAG,EAAEJ,IAAI,CAACE;YAAK,CAAC,CAAC,CAAC;UAC3C;QAAE;UAAA;UAAA;UAAA;QAAA,QACF,eACF;UAAO,SAAS,EAAC,eAAe;UAAC,OAAO,EAAEF,IAAI,CAACE,IAAK;UAAA,uBAAC;YAAM,SAAS,EAAC,oBAAoB;YAAA,UAAEF,IAAI,CAACE;UAAI;YAAA;YAAA;YAAA;UAAA;QAAQ;UAAA;UAAA;UAAA;QAAA,QACpG;MAAA,GAXHF,IAAI,CAACE,IAAI;QAAA;QAAA;QAAA;MAAA,QAajB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAEf;AAAC,GA3BeN,WAAW;EAAA,QACLL,cAAc,EACjBD,cAAc;AAAA;AAAA,KAFjBM,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}