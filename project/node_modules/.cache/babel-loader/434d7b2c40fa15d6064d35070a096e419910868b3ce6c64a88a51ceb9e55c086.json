{"ast":null,"code":"var _jsxFileName = \"/Users/daria/Desktop/ escape/project/src/pages/error/error.tsx\";\nimport { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Error() {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"404.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Page not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Go to main page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = Error;\nvar _c;\n$RefreshReg$(_c, \"Error\");","map":{"version":3,"names":["Fragment","Link","Error"],"sources":["/Users/daria/Desktop/ escape/project/src/pages/error/error.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport {Link} from 'react-router-dom';\n\nexport function Error(): JSX.Element {\n  return (\n    <Fragment>\n      <h1>\n        404.\n        <br />\n        <small>Page not found</small>\n      </h1>\n      <Link to=\"/\">Go to main page</Link>\n    </Fragment>\n  );\n}\n"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,SAAQC,IAAI,QAAO,kBAAkB;AAAC;AAEtC,OAAO,SAASC,KAAK,GAAgB;EACnC,oBACE,QAAC,QAAQ;IAAA,wBACP;MAAA,WAAI,MAEF;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAA,UAAO;MAAc;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1B,eACL,QAAC,IAAI;MAAC,EAAE,EAAC,GAAG;MAAA,UAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1B;AAEf;AAAC,KAXeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}